# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093
# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml" - "second_rules.yml"
# A scrape configuration containing exactly one endpoint to scrape: Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics' scheme defaults to 'http'.
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'localhost'
    static_configs:
    - targets: ['172.17.0.1:9100']

  - job_name: 'LAPTOP-3PMU53DV'
    static_configs:
    - targets: ['192.168.1.15:9182']

  - job_name: 'snmp-ups'
    static_configs:
    - targets:
      - 192.100.100.91 # SNMP device.
      - 192.100.100.92 # SNMP device.
    metrics_path: /snmp
    params:
      module: [UPS-MIB]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 172.17.0.2:9116 # The SNMP exporter's real hostname:port.
  - job_name: 'snmp-windows'
    static_configs:
    - targets:
      - 192.100.100.86 # SNMP device.
    metrics_path: /snmp
    params:
      module: [HOST-RESOURCEs-MIB]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 172.17.0.2:9116 # The SNMP exporter's real hostname:port.
